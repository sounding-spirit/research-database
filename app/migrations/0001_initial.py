# Generated by Django 2.1.8 on 2019-04-29 17:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('abbreviated_title', models.CharField(max_length=10, null=True)),
                ('year_range_start', models.PositiveIntegerField(blank=True, help_text='Year of publication if known or first possible year of publication otherwise', null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2000)])),
                ('year_certainty', models.CharField(blank=True, help_text='Way of indicating “circa” or the like', max_length=255, null=True)),
                ('year_range_end', models.PositiveIntegerField(blank=True, help_text='Last possible year of publication if precise date not known', null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2000)])),
                ('place', models.CharField(blank=True, help_text='Place of publication', max_length=255, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('author_editor', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution', models.CharField(choices=[('composer', 'composer'), ('arranger', 'arranger'), ('hymnwriter', 'hymnwriter')], max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(help_text='Must be identical across entries for the same person involved in multiple books', max_length=255, null=True)),
                ('first_name', models.CharField(help_text='Must be identical across entries for the same person involved in multiple books', max_length=255, null=True)),
                ('birth_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2000)])),
                ('birth_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('birth_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('birth_location', models.CharField(blank=True, help_text='Name of place of residence when born', max_length=255, null=True)),
                ('book_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('book_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('book_location', models.CharField(blank=True, help_text='Name of place of residence when contributed to SH edition', max_length=255, null=True)),
                ('death_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2050)])),
                ('death_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('death_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('death_location', models.CharField(blank=True, max_length=255, null=True)),
                ('committee', models.BooleanField(max_length=255, null=True)),
                ('subcommittee', models.BooleanField(max_length=255, null=True)),
                ('book', models.ForeignKey(help_text='The book corresponding with the SH edition this contributor worked on', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Book')),
            ],
        ),
        migrations.CreateModel(
            name='OSHPrintingSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_name', models.CharField(max_length=255, null=True)),
                ('book_1', models.ForeignKey(blank=True, help_text='ID of a printing unless first printing', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='book_1', to='app.Book')),
                ('book_2', models.ForeignKey(blank=True, help_text='ID of a printing unless last printing', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='book_2', to='app.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(help_text='Page number in book', max_length=255, null=True)),
                ('seq', models.PositiveIntegerField(help_text='Page order', null=True)),
                ('typography', models.CharField(blank=True, choices=[('OSH1', 'OSH1'), ('OSH2', 'OSH2'), ('OSH3', 'OSH3'), ('UHHS', 'UHHS')], max_length=255, null=True)),
                ('book', models.ForeignKey(default=1, help_text='Book in which page appears', on_delete=django.db.models.deletion.CASCADE, to='app.Book')),
            ],
        ),
        migrations.CreateModel(
            name='PrintingRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pr_category', models.CharField(max_length=255, null=True)),
                ('pr_type', models.CharField(blank=True, max_length=255, null=True)),
                ('osh_printing_sequence', models.ForeignKey(help_text='Printing where change introduced', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.OSHPrintingSequence')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Page')),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('lines', models.PositiveIntegerField(choices=[(3, '3'), (4, '4')], null=True)),
                ('page_end', models.ForeignKey(help_text='Last page of song from Pages; should be same as the page start if a half-page or one-page song', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_end', to='app.Page')),
                ('page_start', models.ForeignKey(help_text='Starting page of song from Pages', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_start', to='app.Page')),
            ],
        ),
        migrations.CreateModel(
            name='SourceRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sr_category', models.CharField(choices=[('scriptural citation', 'scriptural citation'), ('attribution', 'attribution'), ('song', 'song'), ('hymn text', 'hymn text'), ('alto', 'alto'), ('historical note', 'historical note'), ('rudiments', 'rudiments')], help_text='Category of relationship', max_length=255, null=True)),
                ('sr_type', models.CharField(blank=True, choices=[('identical', 'identical'), ('near identical', 'near identical'), ('adapted', 'adapted'), ('direct citation', 'direct citation')], help_text='Type of the relationship', max_length=255, null=True)),
                ('book', models.ForeignKey(help_text='Book that serves as source for song/text unit', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Book')),
                ('song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Song')),
            ],
        ),
        migrations.CreateModel(
            name='TextUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.PositiveIntegerField(help_text='Number indicating where on the page this text unit falls', null=True)),
                ('value', models.TextField(help_text='The content of the unit, or a description of it', null=True)),
                ('section', models.CharField(help_text='Name of the section of the book', max_length=255, null=True)),
                ('subsection', models.CharField(blank=True, help_text='Name of a subsection of the book, e.g. a section of the Rudiments', max_length=255, null=True)),
                ('page', models.ForeignKey(help_text='Relevant page from Pages table', null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Page')),
            ],
        ),
        migrations.AddField(
            model_name='sourcerelationship',
            name='text_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TextUnit'),
        ),
        migrations.AddField(
            model_name='printingrelationship',
            name='song',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Song'),
        ),
        migrations.AddField(
            model_name='printingrelationship',
            name='text_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TextUnit'),
        ),
        migrations.AddField(
            model_name='contribution',
            name='contributor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Contributor'),
        ),
        migrations.AddField(
            model_name='contribution',
            name='song',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Song'),
        ),
    ]
